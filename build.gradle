import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import static org.gradle.api.JavaVersion.VERSION_11
import io.gitlab.arturbosch.detekt.DetektPlugin

buildscript {
    repositories {
        maven {
            url = "$artifactoryContextUrl/corda-releases"
        }
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.allopen' apply false
    id 'org.jetbrains.kotlin.plugin.noarg' apply false
    id 'io.gitlab.arturbosch.detekt' apply false
    id 'idea'
    id 'application'
    id 'com.jfrog.artifactory'
    id 'maven-publish'
}

wrapper {
    gradleVersion = '6.8.1'
    distributionType = Wrapper.DistributionType.BIN
}

def rootProjectDir = rootDir
def revision = {
    if (System.getenv("CORDA_REVISION")) {
        return System.getenv("CORDA_REVISION")
    }
    try {
        return "git rev-parse HEAD".execute().text.trim()
    } catch (Exception error) {
        logger.warn("git is unavailable in build environment", error)
        "unknown"
    }
}()

def releaseType = System.getenv('RELEASE_TYPE') ?: "SNAPSHOT"
artifactory {
    publish {
        contextUrl = artifactoryContextUrl
        repository {
            repoKey = System.getenv('CORDA_PUBLISH_REPOSITORY_KEY') ?: 'corda-os-maven-dev'
            username = System.getenv('CORDA_ARTIFACTORY_USERNAME')
            password = System.getenv('CORDA_ARTIFACTORY_PASSWORD')
            maven = true
        }
        defaults {
            publishPom = true
            publishArtifacts = true
            publishBuildInfo = true

            properties = ['release.type': releaseType, 'source.revision': revision]
        }
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'idea'
    apply plugin: 'kotlin-allopen'
    apply plugin: 'kotlin-noarg'
    apply plugin: DetektPlugin

    detekt {
        baseline = file("$projectDir/detekt-baseline.xml")
        config.setFrom(files("$rootProjectDir/detekt-config.yml"))
        parallel = true
        reports {
            xml {
                enabled = true
                destination = file("$projectDir/build/detekt-report.xml")
            }
            html {
                enabled = false
            }
            txt {
                enabled = false
            }
        }
    }

    dependencies {
        detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:$detektPluginVersion"
    }
}

allprojects {
    version flowworker_version

    tasks.withType(JavaCompile) {
        sourceCompatibility = VERSION_11
        targetCompatibility = VERSION_11
        options.encoding = 'UTF-8'
        options.compilerArgs += '-XDenableSunApiLintControl'
    }

    tasks.withType(KotlinCompile) {
        kotlinOptions {
            languageVersion = '1.4'
            apiVersion = '1.4'
            jvmTarget = VERSION_11
            javaParameters = true   // Useful for reflection.
            freeCompilerArgs = ['-Xjvm-default=all']
        }
    }

    repositories {
        maven {
            url = "$artifactoryContextUrl/corda-dependencies-dev"
        }
        maven {
            url = "$artifactoryContextUrl/corda-releases"
        }
        maven {
            url = "$artifactoryContextUrl/corda-dependencies"
        }
        maven {
            url = "$artifactoryContextUrl/corda-dev"
        }
        maven {
            url = "$artifactoryContextUrl/corda-os-maven-dev"
        }
        mavenCentral()
        jcenter()
        maven {
            url = "https://kotlin.bintray.com/kotlinx"
        }
        maven {
            url = "https://repo.gradle.org/gradle/libs-releases-local/"
        }
        maven {
            url = "https://dl.bintray.com/palantir/releases/"
        }
        maven {
            // For Apache ServiceMix.
            url = 'https://repository.mulesoft.org/nexus/content/repositories/public'
            content {
                // The repo contains this artifact but without its jar.
                excludeGroup 'com.github.detro'
            }
        }
        maven {
            url = "$artifactoryContextUrl/${System.getenv('CORDA_CONSUME_REPOSITORY_KEY') ?: 'corda-os-maven'}"
        }
        mavenLocal()
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-osgi-bundle:$kotlinVersion"
        implementation "net.corda.kotlin:kotlin-stdlib-jdk8-osgi:$kotlinVersion"
    }
}